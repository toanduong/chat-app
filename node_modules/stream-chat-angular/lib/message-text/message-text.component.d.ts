import { OnChanges, SimpleChanges } from '@angular/core';
import { DefaultStreamChatGenerics, MentionTemplateContext, StreamMessage } from '../types';
import { MessageResponseBase, UserResponse } from 'stream-chat';
import { MessageService } from '../message.service';
import { CustomTemplatesService } from '../custom-templates.service';
import * as i0 from "@angular/core";
declare type MessagePart = {
    content: string;
    type: 'text' | 'mention';
    user?: UserResponse;
};
/**
 * The `MessageTextComponent` displays the text content of a message.
 */
export declare class MessageTextComponent implements OnChanges {
    private messageService;
    readonly customTemplatesService: CustomTemplatesService;
    /**
     * The message which text should be displayed
     */
    message: StreamMessage<DefaultStreamChatGenerics> | undefined | MessageResponseBase<DefaultStreamChatGenerics>;
    /**
     * `true` if the component displayes a message quote
     */
    isQuoted: boolean;
    /**
     * `true` if the
     */
    shouldTranslate: boolean;
    messageTextParts: MessagePart[] | undefined;
    messageText?: string;
    displayAs: 'text' | 'html';
    private readonly urlRegexp;
    private emojiRegexp;
    constructor(messageService: MessageService, customTemplatesService: CustomTemplatesService);
    ngOnChanges(changes: SimpleChanges): void;
    getMentionContext(messagePart: MessagePart): MentionTemplateContext;
    private createMessageParts;
    private getMessageContent;
    private fixEmojiDisplay;
    private wrapLinksWithAnchorTag;
    static ɵfac: i0.ɵɵFactoryDeclaration<MessageTextComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MessageTextComponent, "stream-message-text", never, { "message": "message"; "isQuoted": "isQuoted"; "shouldTranslate": "shouldTranslate"; }, {}, never, never, false, never>;
}
export {};
