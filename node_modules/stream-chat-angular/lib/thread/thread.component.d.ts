import { OnDestroy } from '@angular/core';
import { Channel } from 'stream-chat';
import { ChatClientService } from '../chat-client.service';
import { ChannelService } from '../channel.service';
import { CustomTemplatesService } from '../custom-templates.service';
import { DefaultStreamChatGenerics, StreamMessage, ThreadHeaderContext } from '../types';
import * as i0 from "@angular/core";
/**
 * The `Thread` component represents a [message thread](/chat/docs/javascript/threads/), it is a container component that displays a thread with a header, [`MessageList`](/chat/docs/sdk/angular/components/MessageListComponent) and [`MessageInput`](/chat/docs/sdk/angular/components/MessageInputComponent/) components.
 */
export declare class ThreadComponent implements OnDestroy {
    customTemplatesService: CustomTemplatesService;
    private channelService;
    private chatClientService;
    private class;
    parentMessage: StreamMessage | undefined;
    channel: Channel<DefaultStreamChatGenerics> | undefined;
    private subscriptions;
    constructor(customTemplatesService: CustomTemplatesService, channelService: ChannelService, chatClientService: ChatClientService);
    ngOnDestroy(): void;
    getThreadHeaderContext(): ThreadHeaderContext;
    closeThread(): void;
    get channelName(): string | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThreadComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThreadComponent, "stream-thread", never, {}, {}, never, ["*"], false, never>;
}
