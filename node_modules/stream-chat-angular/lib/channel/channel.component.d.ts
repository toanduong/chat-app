import { Observable, Subscription } from 'rxjs';
import { ChannelService } from '../channel.service';
import { ThemeService } from '../theme.service';
import { CustomTemplatesService } from '../custom-templates.service';
import * as i0 from "@angular/core";
/**
 * The `Channel` component is a container component that displays the [`ChannelHeader`](/chat/docs/sdk/angular/components/ChannelHeaderComponent/), [`MessageList`](/chat/docs/sdk/angular/components/MessageListComponent), [`NotificationList`](/chat/docs/sdk/angular/components/NotificationListComponent/) and [`MessageInput`](/chat/docs/sdk/angular/components/MessageInputComponent/) components. You can also provide the [`Thread`](/chat/docs/sdk/angular/components/ThreadComponent/) component to use message [threads](/chat/docs/javascript/threads/).
 */
export declare class ChannelComponent {
    private channelService;
    private themeService;
    readonly customTemplatesService: CustomTemplatesService;
    isError$: Observable<boolean>;
    isInitializing$: Observable<boolean>;
    isActiveThread$: Observable<boolean>;
    isActiveChannel$: Observable<boolean>;
    subscriptions: Subscription[];
    theme$: Observable<string>;
    constructor(channelService: ChannelService, themeService: ThemeService, customTemplatesService: CustomTemplatesService);
    static ɵfac: i0.ɵɵFactoryDeclaration<ChannelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChannelComponent, "stream-channel", never, {}, {}, never, ["*", "[name=\"thread\"]"], false, never>;
}
