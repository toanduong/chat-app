import { OnDestroy } from '@angular/core';
import { AmplitudeRecorderService } from '../amplitude-recorder.service';
import { Observable } from 'rxjs';
import { AudioRecorderService } from '../audio-recorder.service';
import * as i0 from "@angular/core";
/**
 * The `VoiceRecorderWavebarComponent` displays the amplitudes of the recording while the recoding is in progress
 */
export declare class VoiceRecorderWavebarComponent implements OnDestroy {
    private amplitudeRecorder;
    private audioRecorder;
    amplitudes$: Observable<number[]>;
    formattedDuration: string;
    durationComputeInterval: ReturnType<typeof setInterval>;
    isLongerThanOneHour: boolean;
    constructor(amplitudeRecorder: AmplitudeRecorderService, audioRecorder: AudioRecorderService);
    trackByIndex(i: number): number;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<VoiceRecorderWavebarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<VoiceRecorderWavebarComponent, "stream-voice-recorder-wavebar", never, {}, {}, never, never, false, never>;
}
