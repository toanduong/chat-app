import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../custom-templates.service";
import * as i2 from "@angular/common";
import * as i3 from "../loading-indicator/loading-indicator.component";
/**
 * The `LoadingInficatorPlaceholder` component displays the [default loading indicator](/chat/docs/sdk/angular/components/LoadingIndicatorComponent/) unless a [custom template](/chat/docs/sdk/angular/services/CustomTemplatesService/) is provided. This component is used by the SDK internally, you likely won't need to use it.
 */
export class LoadingIndicatorPlaceholderComponent {
    constructor(customTemplatesService) {
        this.customTemplatesService = customTemplatesService;
    }
}
LoadingIndicatorPlaceholderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: LoadingIndicatorPlaceholderComponent, deps: [{ token: i1.CustomTemplatesService }], target: i0.ɵɵFactoryTarget.Component });
LoadingIndicatorPlaceholderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: LoadingIndicatorPlaceholderComponent, selector: "stream-loading-indicator-placeholder", ngImport: i0, template: "<ng-template #defaultLoadingIndicator>\n  <stream-loading-indicator></stream-loading-indicator>\n</ng-template>\n<ng-container\n  *ngTemplateOutlet=\"\n    (customTemplatesService.loadingIndicatorTemplate$ | async) ||\n    defaultLoadingIndicator\n  \"\n></ng-container>\n", dependencies: [{ kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i3.LoadingIndicatorComponent, selector: "stream-loading-indicator" }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: LoadingIndicatorPlaceholderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'stream-loading-indicator-placeholder', template: "<ng-template #defaultLoadingIndicator>\n  <stream-loading-indicator></stream-loading-indicator>\n</ng-template>\n<ng-container\n  *ngTemplateOutlet=\"\n    (customTemplatesService.loadingIndicatorTemplate$ | async) ||\n    defaultLoadingIndicator\n  \"\n></ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.CustomTemplatesService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy1pbmRpY2F0b3ItcGxhY2Vob2xkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RyZWFtLWNoYXQtYW5ndWxhci9zcmMvbGliL2ljb24vbG9hZGluZy1pbmRpY2F0b3ItcGxhY2Vob2xkZXIvbG9hZGluZy1pbmRpY2F0b3ItcGxhY2Vob2xkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RyZWFtLWNoYXQtYW5ndWxhci9zcmMvbGliL2ljb24vbG9hZGluZy1pbmRpY2F0b3ItcGxhY2Vob2xkZXIvbG9hZGluZy1pbmRpY2F0b3ItcGxhY2Vob2xkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFHMUM7O0dBRUc7QUFNSCxNQUFNLE9BQU8sb0NBQW9DO0lBQy9DLFlBQW1CLHNCQUE4QztRQUE5QywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO0lBQUcsQ0FBQzs7aUlBRDFELG9DQUFvQztxSEFBcEMsb0NBQW9DLDRFQ1hqRCxrUkFTQTsyRkRFYSxvQ0FBb0M7a0JBTGhELFNBQVM7K0JBQ0Usc0NBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDdXN0b21UZW1wbGF0ZXNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vY3VzdG9tLXRlbXBsYXRlcy5zZXJ2aWNlJztcblxuLyoqXG4gKiBUaGUgYExvYWRpbmdJbmZpY2F0b3JQbGFjZWhvbGRlcmAgY29tcG9uZW50IGRpc3BsYXlzIHRoZSBbZGVmYXVsdCBsb2FkaW5nIGluZGljYXRvcl0oL2NoYXQvZG9jcy9zZGsvYW5ndWxhci9jb21wb25lbnRzL0xvYWRpbmdJbmRpY2F0b3JDb21wb25lbnQvKSB1bmxlc3MgYSBbY3VzdG9tIHRlbXBsYXRlXSgvY2hhdC9kb2NzL3Nkay9hbmd1bGFyL3NlcnZpY2VzL0N1c3RvbVRlbXBsYXRlc1NlcnZpY2UvKSBpcyBwcm92aWRlZC4gVGhpcyBjb21wb25lbnQgaXMgdXNlZCBieSB0aGUgU0RLIGludGVybmFsbHksIHlvdSBsaWtlbHkgd29uJ3QgbmVlZCB0byB1c2UgaXQuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3N0cmVhbS1sb2FkaW5nLWluZGljYXRvci1wbGFjZWhvbGRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9sb2FkaW5nLWluZGljYXRvci1wbGFjZWhvbGRlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlczogW10sXG59KVxuZXhwb3J0IGNsYXNzIExvYWRpbmdJbmRpY2F0b3JQbGFjZWhvbGRlckNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjdXN0b21UZW1wbGF0ZXNTZXJ2aWNlOiBDdXN0b21UZW1wbGF0ZXNTZXJ2aWNlKSB7fVxufVxuIiwiPG5nLXRlbXBsYXRlICNkZWZhdWx0TG9hZGluZ0luZGljYXRvcj5cbiAgPHN0cmVhbS1sb2FkaW5nLWluZGljYXRvcj48L3N0cmVhbS1sb2FkaW5nLWluZGljYXRvcj5cbjwvbmctdGVtcGxhdGU+XG48bmctY29udGFpbmVyXG4gICpuZ1RlbXBsYXRlT3V0bGV0PVwiXG4gICAgKGN1c3RvbVRlbXBsYXRlc1NlcnZpY2UubG9hZGluZ0luZGljYXRvclRlbXBsYXRlJCB8IGFzeW5jKSB8fFxuICAgIGRlZmF1bHRMb2FkaW5nSW5kaWNhdG9yXG4gIFwiXG4+PC9uZy1jb250YWluZXI+XG4iXX0=