import { Component } from '@angular/core';
import { formatDuration } from '../../format-duration';
import * as i0 from "@angular/core";
import * as i1 from "../amplitude-recorder.service";
import * as i2 from "../audio-recorder.service";
import * as i3 from "@angular/common";
/**
 * The `VoiceRecorderWavebarComponent` displays the amplitudes of the recording while the recoding is in progress
 */
export class VoiceRecorderWavebarComponent {
    constructor(amplitudeRecorder, audioRecorder) {
        this.amplitudeRecorder = amplitudeRecorder;
        this.audioRecorder = audioRecorder;
        this.isLongerThanOneHour = false;
        this.amplitudes$ = this.amplitudeRecorder.amplitudes$;
        this.formattedDuration = formatDuration(this.audioRecorder.durationMs / 1000);
        this.durationComputeInterval = setInterval(() => {
            this.isLongerThanOneHour = this.audioRecorder.durationMs / 1000 > 3600;
            this.formattedDuration = formatDuration(this.audioRecorder.durationMs / 1000);
        }, 1000);
    }
    trackByIndex(i) {
        return i;
    }
    ngOnDestroy() {
        clearInterval(this.durationComputeInterval);
    }
}
VoiceRecorderWavebarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: VoiceRecorderWavebarComponent, deps: [{ token: i1.AmplitudeRecorderService }, { token: i2.AudioRecorderService }], target: i0.ɵɵFactoryTarget.Component });
VoiceRecorderWavebarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: VoiceRecorderWavebarComponent, selector: "stream-voice-recorder-wavebar", ngImport: i0, template: "<div\n  class=\"str-chat__recording-timer\"\n  [class.str-chat__recording-timer--hours]=\"isLongerThanOneHour\"\n>\n  {{ formattedDuration }}\n</div>\n<div class=\"str-chat__waveform-box-container\">\n  <div class=\"str-chat__audio_recorder__waveform-box\">\n    <div\n      *ngFor=\"let amplitude of amplitudes$ | async; trackBy: trackByIndex\"\n      class=\"str-chat__wave-progress-bar__amplitude-bar\"\n      [style.--str-chat__wave-progress-bar__amplitude-bar-height]=\"\n        (amplitude ?? 0) * 100 + '%'\n      \"\n    ></div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: VoiceRecorderWavebarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'stream-voice-recorder-wavebar', template: "<div\n  class=\"str-chat__recording-timer\"\n  [class.str-chat__recording-timer--hours]=\"isLongerThanOneHour\"\n>\n  {{ formattedDuration }}\n</div>\n<div class=\"str-chat__waveform-box-container\">\n  <div class=\"str-chat__audio_recorder__waveform-box\">\n    <div\n      *ngFor=\"let amplitude of amplitudes$ | async; trackBy: trackByIndex\"\n      class=\"str-chat__wave-progress-bar__amplitude-bar\"\n      [style.--str-chat__wave-progress-bar__amplitude-bar-height]=\"\n        (amplitude ?? 0) * 100 + '%'\n      \"\n    ></div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AmplitudeRecorderService }, { type: i2.AudioRecorderService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidm9pY2UtcmVjb3JkZXItd2F2ZWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zdHJlYW0tY2hhdC1hbmd1bGFyL3NyYy9saWIvdm9pY2UtcmVjb3JkZXIvdm9pY2UtcmVjb3JkZXItd2F2ZWJhci92b2ljZS1yZWNvcmRlci13YXZlYmFyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0cmVhbS1jaGF0LWFuZ3VsYXIvc3JjL2xpYi92b2ljZS1yZWNvcmRlci92b2ljZS1yZWNvcmRlci13YXZlYmFyL3ZvaWNlLXJlY29yZGVyLXdhdmViYXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUlyRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7O0FBRXZEOztHQUVHO0FBTUgsTUFBTSxPQUFPLDZCQUE2QjtJQU14QyxZQUNVLGlCQUEyQyxFQUMzQyxhQUFtQztRQURuQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQTBCO1FBQzNDLGtCQUFhLEdBQWIsYUFBYSxDQUFzQjtRQUo3Qyx3QkFBbUIsR0FBRyxLQUFLLENBQUM7UUFNMUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsV0FBVyxDQUFDO1FBQ3RELElBQUksQ0FBQyxpQkFBaUIsR0FBRyxjQUFjLENBQ3JDLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxHQUFHLElBQUksQ0FDckMsQ0FBQztRQUNGLElBQUksQ0FBQyx1QkFBdUIsR0FBRyxXQUFXLENBQUMsR0FBRyxFQUFFO1lBQzlDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDO1lBQ3ZFLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxjQUFjLENBQ3JDLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxHQUFHLElBQUksQ0FDckMsQ0FBQztRQUNKLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRCxZQUFZLENBQUMsQ0FBUztRQUNwQixPQUFPLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRCxXQUFXO1FBQ1QsYUFBYSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OzBIQTVCVSw2QkFBNkI7OEdBQTdCLDZCQUE2QixxRUNkMUMsOGlCQWlCQTsyRkRIYSw2QkFBNkI7a0JBTHpDLFNBQVM7K0JBQ0UsK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFtcGxpdHVkZVJlY29yZGVyU2VydmljZSB9IGZyb20gJy4uL2FtcGxpdHVkZS1yZWNvcmRlci5zZXJ2aWNlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEF1ZGlvUmVjb3JkZXJTZXJ2aWNlIH0gZnJvbSAnLi4vYXVkaW8tcmVjb3JkZXIuc2VydmljZSc7XG5pbXBvcnQgeyBmb3JtYXREdXJhdGlvbiB9IGZyb20gJy4uLy4uL2Zvcm1hdC1kdXJhdGlvbic7XG5cbi8qKlxuICogVGhlIGBWb2ljZVJlY29yZGVyV2F2ZWJhckNvbXBvbmVudGAgZGlzcGxheXMgdGhlIGFtcGxpdHVkZXMgb2YgdGhlIHJlY29yZGluZyB3aGlsZSB0aGUgcmVjb2RpbmcgaXMgaW4gcHJvZ3Jlc3NcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc3RyZWFtLXZvaWNlLXJlY29yZGVyLXdhdmViYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdm9pY2UtcmVjb3JkZXItd2F2ZWJhci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlczogW10sXG59KVxuZXhwb3J0IGNsYXNzIFZvaWNlUmVjb3JkZXJXYXZlYmFyQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgYW1wbGl0dWRlcyQ6IE9ic2VydmFibGU8bnVtYmVyW10+O1xuICBmb3JtYXR0ZWREdXJhdGlvbjogc3RyaW5nO1xuICBkdXJhdGlvbkNvbXB1dGVJbnRlcnZhbDogUmV0dXJuVHlwZTx0eXBlb2Ygc2V0SW50ZXJ2YWw+O1xuICBpc0xvbmdlclRoYW5PbmVIb3VyID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBhbXBsaXR1ZGVSZWNvcmRlcjogQW1wbGl0dWRlUmVjb3JkZXJTZXJ2aWNlLFxuICAgIHByaXZhdGUgYXVkaW9SZWNvcmRlcjogQXVkaW9SZWNvcmRlclNlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5hbXBsaXR1ZGVzJCA9IHRoaXMuYW1wbGl0dWRlUmVjb3JkZXIuYW1wbGl0dWRlcyQ7XG4gICAgdGhpcy5mb3JtYXR0ZWREdXJhdGlvbiA9IGZvcm1hdER1cmF0aW9uKFxuICAgICAgdGhpcy5hdWRpb1JlY29yZGVyLmR1cmF0aW9uTXMgLyAxMDAwXG4gICAgKTtcbiAgICB0aGlzLmR1cmF0aW9uQ29tcHV0ZUludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgdGhpcy5pc0xvbmdlclRoYW5PbmVIb3VyID0gdGhpcy5hdWRpb1JlY29yZGVyLmR1cmF0aW9uTXMgLyAxMDAwID4gMzYwMDtcbiAgICAgIHRoaXMuZm9ybWF0dGVkRHVyYXRpb24gPSBmb3JtYXREdXJhdGlvbihcbiAgICAgICAgdGhpcy5hdWRpb1JlY29yZGVyLmR1cmF0aW9uTXMgLyAxMDAwXG4gICAgICApO1xuICAgIH0sIDEwMDApO1xuICB9XG5cbiAgdHJhY2tCeUluZGV4KGk6IG51bWJlcikge1xuICAgIHJldHVybiBpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLmR1cmF0aW9uQ29tcHV0ZUludGVydmFsKTtcbiAgfVxufVxuIiwiPGRpdlxuICBjbGFzcz1cInN0ci1jaGF0X19yZWNvcmRpbmctdGltZXJcIlxuICBbY2xhc3Muc3RyLWNoYXRfX3JlY29yZGluZy10aW1lci0taG91cnNdPVwiaXNMb25nZXJUaGFuT25lSG91clwiXG4+XG4gIHt7IGZvcm1hdHRlZER1cmF0aW9uIH19XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJzdHItY2hhdF9fd2F2ZWZvcm0tYm94LWNvbnRhaW5lclwiPlxuICA8ZGl2IGNsYXNzPVwic3RyLWNoYXRfX2F1ZGlvX3JlY29yZGVyX193YXZlZm9ybS1ib3hcIj5cbiAgICA8ZGl2XG4gICAgICAqbmdGb3I9XCJsZXQgYW1wbGl0dWRlIG9mIGFtcGxpdHVkZXMkIHwgYXN5bmM7IHRyYWNrQnk6IHRyYWNrQnlJbmRleFwiXG4gICAgICBjbGFzcz1cInN0ci1jaGF0X193YXZlLXByb2dyZXNzLWJhcl9fYW1wbGl0dWRlLWJhclwiXG4gICAgICBbc3R5bGUuLS1zdHItY2hhdF9fd2F2ZS1wcm9ncmVzcy1iYXJfX2FtcGxpdHVkZS1iYXItaGVpZ2h0XT1cIlxuICAgICAgICAoYW1wbGl0dWRlID8/IDApICogMTAwICsgJyUnXG4gICAgICBcIlxuICAgID48L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==