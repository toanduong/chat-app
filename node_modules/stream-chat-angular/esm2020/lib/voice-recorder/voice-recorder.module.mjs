import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { VoiceRecorderComponent } from './voice-recorder.component';
import { VoiceRecordingModule } from '../voice-recording/voice-recording.module';
import { IconModule } from '../icon/icon.module';
import { TranslateModule } from '@ngx-translate/core';
import { AudioRecorderService } from './audio-recorder.service';
import { TranscoderService } from './transcoder.service';
import { AmplitudeRecorderService } from './amplitude-recorder.service';
import { VoiceRecorderWavebarComponent } from './voice-recorder-wavebar/voice-recorder-wavebar.component';
import * as i0 from "@angular/core";
export class VoiceRecorderModule {
}
VoiceRecorderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: VoiceRecorderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
VoiceRecorderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.0.4", ngImport: i0, type: VoiceRecorderModule, declarations: [VoiceRecorderComponent, VoiceRecorderWavebarComponent], imports: [CommonModule, VoiceRecordingModule, IconModule, TranslateModule], exports: [VoiceRecorderComponent, VoiceRecorderWavebarComponent] });
VoiceRecorderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: VoiceRecorderModule, providers: [
        AudioRecorderService,
        TranscoderService,
        AmplitudeRecorderService,
    ], imports: [CommonModule, VoiceRecordingModule, IconModule, TranslateModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: VoiceRecorderModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [VoiceRecorderComponent, VoiceRecorderWavebarComponent],
                    imports: [CommonModule, VoiceRecordingModule, IconModule, TranslateModule],
                    exports: [VoiceRecorderComponent, VoiceRecorderWavebarComponent],
                    providers: [
                        AudioRecorderService,
                        TranscoderService,
                        AmplitudeRecorderService,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidm9pY2UtcmVjb3JkZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RyZWFtLWNoYXQtYW5ndWxhci9zcmMvbGliL3ZvaWNlLXJlY29yZGVyL3ZvaWNlLXJlY29yZGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNqRixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDJEQUEyRCxDQUFDOztBQVkxRyxNQUFNLE9BQU8sbUJBQW1COztnSEFBbkIsbUJBQW1CO2lIQUFuQixtQkFBbUIsaUJBVGYsc0JBQXNCLEVBQUUsNkJBQTZCLGFBQzFELFlBQVksRUFBRSxvQkFBb0IsRUFBRSxVQUFVLEVBQUUsZUFBZSxhQUMvRCxzQkFBc0IsRUFBRSw2QkFBNkI7aUhBT3BELG1CQUFtQixhQU5uQjtRQUNULG9CQUFvQjtRQUNwQixpQkFBaUI7UUFDakIsd0JBQXdCO0tBQ3pCLFlBTlMsWUFBWSxFQUFFLG9CQUFvQixFQUFFLFVBQVUsRUFBRSxlQUFlOzJGQVE5RCxtQkFBbUI7a0JBVi9CLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsc0JBQXNCLEVBQUUsNkJBQTZCLENBQUM7b0JBQ3JFLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxvQkFBb0IsRUFBRSxVQUFVLEVBQUUsZUFBZSxDQUFDO29CQUMxRSxPQUFPLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSw2QkFBNkIsQ0FBQztvQkFDaEUsU0FBUyxFQUFFO3dCQUNULG9CQUFvQjt3QkFDcEIsaUJBQWlCO3dCQUNqQix3QkFBd0I7cUJBQ3pCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBWb2ljZVJlY29yZGVyQ29tcG9uZW50IH0gZnJvbSAnLi92b2ljZS1yZWNvcmRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVm9pY2VSZWNvcmRpbmdNb2R1bGUgfSBmcm9tICcuLi92b2ljZS1yZWNvcmRpbmcvdm9pY2UtcmVjb3JkaW5nLm1vZHVsZSc7XG5pbXBvcnQgeyBJY29uTW9kdWxlIH0gZnJvbSAnLi4vaWNvbi9pY29uLm1vZHVsZSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IEF1ZGlvUmVjb3JkZXJTZXJ2aWNlIH0gZnJvbSAnLi9hdWRpby1yZWNvcmRlci5zZXJ2aWNlJztcbmltcG9ydCB7IFRyYW5zY29kZXJTZXJ2aWNlIH0gZnJvbSAnLi90cmFuc2NvZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQW1wbGl0dWRlUmVjb3JkZXJTZXJ2aWNlIH0gZnJvbSAnLi9hbXBsaXR1ZGUtcmVjb3JkZXIuc2VydmljZSc7XG5pbXBvcnQgeyBWb2ljZVJlY29yZGVyV2F2ZWJhckNvbXBvbmVudCB9IGZyb20gJy4vdm9pY2UtcmVjb3JkZXItd2F2ZWJhci92b2ljZS1yZWNvcmRlci13YXZlYmFyLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1ZvaWNlUmVjb3JkZXJDb21wb25lbnQsIFZvaWNlUmVjb3JkZXJXYXZlYmFyQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgVm9pY2VSZWNvcmRpbmdNb2R1bGUsIEljb25Nb2R1bGUsIFRyYW5zbGF0ZU1vZHVsZV0sXG4gIGV4cG9ydHM6IFtWb2ljZVJlY29yZGVyQ29tcG9uZW50LCBWb2ljZVJlY29yZGVyV2F2ZWJhckNvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIEF1ZGlvUmVjb3JkZXJTZXJ2aWNlLFxuICAgIFRyYW5zY29kZXJTZXJ2aWNlLFxuICAgIEFtcGxpdHVkZVJlY29yZGVyU2VydmljZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVm9pY2VSZWNvcmRlck1vZHVsZSB7fVxuIl19