import { Component, Input, } from '@angular/core';
import { MediaRecordingState } from './media-recorder';
import * as i0 from "@angular/core";
import * as i1 from "./audio-recorder.service";
import * as i2 from "@angular/common";
import * as i3 from "../voice-recording/voice-recording.component";
import * as i4 from "../icon/icon-placeholder/icon-placeholder.component";
import * as i5 from "../icon/loading-indicator/loading-indicator.component";
import * as i6 from "./voice-recorder-wavebar/voice-recorder-wavebar.component";
/**
 * The `VoiceRecorderComponent` makes it possible to record audio, and then upload it as a voice recording attachment
 */
export class VoiceRecorderComponent {
    constructor(recorder) {
        this.recorder = recorder;
        this.recordState = MediaRecordingState.STOPPED;
        this.isLoading = false;
        this.MediaRecordingState = MediaRecordingState;
        this.subscriptions = [];
    }
    ngOnInit() {
        this.subscriptions.push(this.recorder.recordingState$.subscribe((s) => {
            this.recordState = s;
            if (this.recordState === MediaRecordingState.ERROR) {
                this.voiceRecorderService?.isRecorderVisible$.next(false);
            }
        }));
    }
    ngOnChanges(changes) {
        if (changes.voiceRecorderService && this.voiceRecorderService) {
            this.isVisibleSubscription =
                this.voiceRecorderService.isRecorderVisible$.subscribe((isVisible) => {
                    if (!isVisible) {
                        this.recording = undefined;
                        this.isLoading = false;
                    }
                });
        }
        else {
            this.isVisibleSubscription?.unsubscribe();
        }
    }
    ngOnDestroy() {
        this.subscriptions.forEach((s) => s.unsubscribe());
    }
    cancel() {
        if (this.recording) {
            this.recording = undefined;
        }
        else {
            void this.recorder.stop({ cancel: true });
        }
        this.voiceRecorderService?.isRecorderVisible$.next(false);
    }
    async stop() {
        this.recording = await this.recorder.stop();
    }
    pause() {
        this.recorder.pause();
    }
    resume() {
        this.recorder.resume();
    }
    uploadRecording() {
        if (!this.recording) {
            return;
        }
        this.isLoading = true;
        this.voiceRecorderService?.recording$.next(this.recording);
    }
}
VoiceRecorderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: VoiceRecorderComponent, deps: [{ token: i1.AudioRecorderService }], target: i0.ɵɵFactoryTarget.Component });
VoiceRecorderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: VoiceRecorderComponent, selector: "stream-voice-recorder", inputs: { voiceRecorderService: "voiceRecorderService" }, providers: [], usesOnChanges: true, ngImport: i0, template: "<div\n  class=\"str-chat__audio_recorder-container\"\n  *ngIf=\"voiceRecorderService?.isRecorderVisible$ | async\"\n>\n  <div class=\"str-chat__audio_recorder\" data-testid=\"audio-recorder\">\n    <button\n      class=\"str-chat__audio_recorder__cancel-button\"\n      data-testid=\"cancel-recording-audio-button\"\n      [disabled]=\"isLoading\"\n      (click)=\"cancel()\"\n      (keyup.enter)=\"cancel()\"\n    >\n      <stream-icon-placeholder icon=\"bin\"></stream-icon-placeholder>\n    </button>\n    <stream-voice-recorder-wavebar\n      *ngIf=\"\n        (recordState === MediaRecordingState.RECORDING ||\n          recordState === MediaRecordingState.PAUSED) &&\n        !recording\n      \"\n    ></stream-voice-recorder-wavebar>\n    <!-- eslint-disable @angular-eslint/template/no-any -->\n    <stream-voice-recording\n      [attachment]=\"$any(recording)\"\n      *ngIf=\"!!recording\"\n    ></stream-voice-recording>\n    <!-- eslint-enable @angular-eslint/template/no-any -->\n    <button\n      *ngIf=\"recordState === MediaRecordingState.PAUSED && !recording\"\n      class=\"str-chat__audio_recorder__resume-recording-button\"\n      (click)=\"resume()\"\n      (keyup.enter)=\"resume()\"\n    >\n      <stream-icon-placeholder icon=\"mic\"></stream-icon-placeholder>\n    </button>\n    <button\n      *ngIf=\"recordState === MediaRecordingState.RECORDING && !recording\"\n      class=\"str-chat__audio_recorder__pause-recording-button\"\n      data-testid=\"pause-recording-audio-button\"\n      (click)=\"pause()\"\n      (keyup.enter)=\"pause()\"\n    >\n      <stream-icon-placeholder icon=\"pause\"></stream-icon-placeholder>\n    </button>\n    <ng-container\n      *ngIf=\"recordState === MediaRecordingState.STOPPED; else stopButton\"\n    >\n      <button\n        class=\"str-chat__audio_recorder__complete-button\"\n        data-testid=\"audio-recorder-complete-button\"\n        [disabled]=\"!recording\"\n        (click)=\"uploadRecording()\"\n        (keyup.enter)=\"uploadRecording()\"\n      >\n        <stream-loading-indicator\n          *ngIf=\"isLoading; else sendIcon\"\n        ></stream-loading-indicator>\n        <ng-template #sendIcon>\n          <stream-icon-placeholder icon=\"send\"></stream-icon-placeholder>\n        </ng-template>\n      </button>\n    </ng-container>\n    <ng-template #stopButton>\n      <button\n        class=\"str-chat__audio_recorder__stop-button\"\n        data-testid=\"audio-recorder-stop-button\"\n        [disabled]=\"recordState === MediaRecordingState.STOPPED\"\n        (click)=\"stop()\"\n        (keyup.enter)=\"stop()\"\n      >\n        <stream-icon-placeholder icon=\"delivered\"></stream-icon-placeholder>\n      </button>\n    </ng-template>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.VoiceRecordingComponent, selector: "stream-voice-recording", inputs: ["attachment"] }, { kind: "component", type: i4.IconPlaceholderComponent, selector: "stream-icon-placeholder", inputs: ["icon"] }, { kind: "component", type: i5.LoadingIndicatorComponent, selector: "stream-loading-indicator" }, { kind: "component", type: i6.VoiceRecorderWavebarComponent, selector: "stream-voice-recorder-wavebar" }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: VoiceRecorderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'stream-voice-recorder', providers: [], template: "<div\n  class=\"str-chat__audio_recorder-container\"\n  *ngIf=\"voiceRecorderService?.isRecorderVisible$ | async\"\n>\n  <div class=\"str-chat__audio_recorder\" data-testid=\"audio-recorder\">\n    <button\n      class=\"str-chat__audio_recorder__cancel-button\"\n      data-testid=\"cancel-recording-audio-button\"\n      [disabled]=\"isLoading\"\n      (click)=\"cancel()\"\n      (keyup.enter)=\"cancel()\"\n    >\n      <stream-icon-placeholder icon=\"bin\"></stream-icon-placeholder>\n    </button>\n    <stream-voice-recorder-wavebar\n      *ngIf=\"\n        (recordState === MediaRecordingState.RECORDING ||\n          recordState === MediaRecordingState.PAUSED) &&\n        !recording\n      \"\n    ></stream-voice-recorder-wavebar>\n    <!-- eslint-disable @angular-eslint/template/no-any -->\n    <stream-voice-recording\n      [attachment]=\"$any(recording)\"\n      *ngIf=\"!!recording\"\n    ></stream-voice-recording>\n    <!-- eslint-enable @angular-eslint/template/no-any -->\n    <button\n      *ngIf=\"recordState === MediaRecordingState.PAUSED && !recording\"\n      class=\"str-chat__audio_recorder__resume-recording-button\"\n      (click)=\"resume()\"\n      (keyup.enter)=\"resume()\"\n    >\n      <stream-icon-placeholder icon=\"mic\"></stream-icon-placeholder>\n    </button>\n    <button\n      *ngIf=\"recordState === MediaRecordingState.RECORDING && !recording\"\n      class=\"str-chat__audio_recorder__pause-recording-button\"\n      data-testid=\"pause-recording-audio-button\"\n      (click)=\"pause()\"\n      (keyup.enter)=\"pause()\"\n    >\n      <stream-icon-placeholder icon=\"pause\"></stream-icon-placeholder>\n    </button>\n    <ng-container\n      *ngIf=\"recordState === MediaRecordingState.STOPPED; else stopButton\"\n    >\n      <button\n        class=\"str-chat__audio_recorder__complete-button\"\n        data-testid=\"audio-recorder-complete-button\"\n        [disabled]=\"!recording\"\n        (click)=\"uploadRecording()\"\n        (keyup.enter)=\"uploadRecording()\"\n      >\n        <stream-loading-indicator\n          *ngIf=\"isLoading; else sendIcon\"\n        ></stream-loading-indicator>\n        <ng-template #sendIcon>\n          <stream-icon-placeholder icon=\"send\"></stream-icon-placeholder>\n        </ng-template>\n      </button>\n    </ng-container>\n    <ng-template #stopButton>\n      <button\n        class=\"str-chat__audio_recorder__stop-button\"\n        data-testid=\"audio-recorder-stop-button\"\n        [disabled]=\"recordState === MediaRecordingState.STOPPED\"\n        (click)=\"stop()\"\n        (keyup.enter)=\"stop()\"\n      >\n        <stream-icon-placeholder icon=\"delivered\"></stream-icon-placeholder>\n      </button>\n    </ng-template>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AudioRecorderService }]; }, propDecorators: { voiceRecorderService: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,